{"ast":null,"code":"//src/components/Screens/QuestionsScreen.jsx\nimport React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function shuffleArray(array){const arr=array.slice();for(let i=arr.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[arr[i],arr[j]]=[arr[j],arr[i]];}return arr;}function shuffleOptionsAndPatterns(options,patterns){const pairs=options.map((option,i)=>({option,pattern:patterns[i]}));const shuffled=shuffleArray(pairs);return{options:shuffled.map(p=>p.option),patterns:shuffled.map(p=>p.pattern)};}const QuestionsScreen=_ref=>{let{questionsUrl='/pattern-test/data/questions.json',onComplete,userData,timeDisplay=''}=_ref;const fullName=(userData===null||userData===void 0?void 0:userData.fullName)||\"\";useEffect(()=>{console.log(\"QuestionsScreen mounted\");},[]);useEffect(()=>{fetch('/pattern-test/data/questions.json').then(r=>r.text()).then(txt=>{try{const data=JSON.parse(txt);}catch(e){}});},[]);// questions: [{ question, options, patterns }]\nconst[questions,setQuestions]=useState([]);const[loading,setLoading]=useState(true);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[userAnswers,setUserAnswers]=useState([]);const[userPatterns,setUserPatterns]=useState([]);const[showError,setShowError]=useState(false);const[selected,setSelected]=useState(null);const[error,setError]=useState('');// Загрузка и перемешивание вопросов\nuseEffect(()=>{const loadQuestions=async()=>{try{setLoading(true);setError('');const response=await fetch(questionsUrl);if(!response.ok)throw new Error(`Ошибка HTTP: статус ${response.status}`);const data=await response.json();if(!Array.isArray(data.questionsWithPatterns)||data.questionsWithPatterns.length===0){throw new Error('Данные тестов не найдены.');}// Перемешиваем вопросы и варианты\nconst shuffled=shuffleArray(data.questionsWithPatterns.map(q=>({...q,// Перемешиваем опции и patterns синхронно\n...shuffleOptionsAndPatterns(q.options,q.patterns)})));setQuestions(shuffled);setUserAnswers([]);setUserPatterns([]);setCurrentQuestionIndex(0);setSelected(null);}catch(err){setError(err.message||'Ошибка загрузки вопросов');}finally{setLoading(false);}};loadQuestions();},[questionsUrl]);// Обновление выбора при смене вопроса\nuseEffect(()=>{var _userAnswers$currentQ;setSelected((_userAnswers$currentQ=userAnswers[currentQuestionIndex])!==null&&_userAnswers$currentQ!==void 0?_userAnswers$currentQ:null);setShowError(false);},[currentQuestionIndex,userAnswers]);// Обработка выбора\nconst handleSelect=option=>{setSelected(option);setShowError(false);};// Следующий вопрос или завершение\nconst handleNext=()=>{if(selected==null){setShowError(true);return;}// Сохраняем ответ и паттерн\nconst answerArr=[...userAnswers];const patternArr=[...userPatterns];answerArr[currentQuestionIndex]=selected;// Определяем индекс выбранного варианта для паттерна\nconst question=questions[currentQuestionIndex];const selectedIdx=question.options.indexOf(selected);patternArr[currentQuestionIndex]=question.patterns[selectedIdx];setUserAnswers(answerArr);setUserPatterns(patternArr);if(currentQuestionIndex+1<questions.length){setCurrentQuestionIndex(currentQuestionIndex+1);}else{// Передаем ответы и паттерны\nif(onComplete)onComplete({answers:answerArr,patterns:patternArr});}};// Назад\nconst handleBack=()=>{if(currentQuestionIndex>0){setCurrentQuestionIndex(currentQuestionIndex-1);setShowError(false);}};// Повторить тест\nconst handleReload=()=>{setQuestions([]);setLoading(true);setError('');setCurrentQuestionIndex(0);setUserAnswers([]);setUserPatterns([]);setSelected(null);};// Тестовая кнопка: заполнить все ответы автоматически и перейти к результатам\n/* \tconst handleFillTestAnswers = () => {\r\n\t\tif (!questions.length) return;\r\n\t\tconst autoAnswers = questions.map(q => q.options[0] ?? '');\r\n\t\tconst autoPatterns = questions.map(q => q.patterns[0] ?? '');\r\n\t\tif (onComplete) onComplete({ answers: autoAnswers, patterns: autoPatterns });\r\n\t}; */if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"question-test\",style:{display:'block'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"question-test__container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-header\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"fio-display\",children:[\"\\u0424\\u0418\\u041E: \",/*#__PURE__*/_jsx(\"span\",{children:fullName})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"time-display\",children:[\"\\u0414\\u0430\\u0442\\u0430: \",/*#__PURE__*/_jsx(\"span\",{children:timeDisplay})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-test__content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"question__loader-test\",style:{display:'block',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"div\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432...\"})]})})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"question-test\",style:{display:'block'},children:/*#__PURE__*/_jsx(\"div\",{className:\"question-test__container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"question-test__content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",style:{color:'#dc2626',marginTop:10},children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"patterns-button\",onClick:handleReload,children:\"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C \\u043F\\u043E\\u043F\\u044B\\u0442\\u043A\\u0443\"})]})})});}// Главная защита от выхода за пределы массива вопросов\nconst question=questions[currentQuestionIndex];if(!questions.length||!question)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"question-test\",children:/*#__PURE__*/_jsx(\"div\",{className:\"question-test__container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"question-test__content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-test__info\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"fio-display\",className:\"question-block__item\",children:[\"\\u0424\\u0418\\u041E: \",/*#__PURE__*/_jsx(\"span\",{children:fullName})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"time-display\",className:\"question-block__item\",children:[\"\\u0414\\u0430\\u0442\\u0430: \",/*#__PURE__*/_jsx(\"span\",{children:timeDisplay})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-test__counter\",children:[\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \",currentQuestionIndex+1,\" \\u0438\\u0437 \",questions.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-test__block\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"question-test__question\",children:question.question}),/*#__PURE__*/_jsx(\"div\",{className:\"question-test__options\",children:question.options.map((option,i)=>/*#__PURE__*/_jsxs(\"label\",{className:\"question-test__option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:`answer_${currentQuestionIndex}`,value:option,checked:selected===option,onChange:()=>handleSelect(option),tabIndex:0}),/*#__PURE__*/_jsx(\"span\",{className:\"question-test__radio-label\",children:option})]},i))}),/*#__PURE__*/_jsx(\"div\",{id:\"error-message\",className:\"error-message\",style:{display:showError?'block':'none',color:'#dc2626',marginTop:10},children:\"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-test__navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"patterns-button patterns-button-prev\",id:\"prev-button\",type:\"button\",onClick:handleBack,disabled:currentQuestionIndex===0,children:\"\\u041D\\u0430\\u0437\\u0430\\u0434\"}),/*#__PURE__*/_jsx(\"button\",{className:\"patterns-button patterns-button-next\",id:\"next-button\",type:\"button\",onClick:handleNext,children:currentQuestionIndex+1<questions.length?'Далее':'Завершить'})]})]})]})})});};export default QuestionsScreen;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","shuffleArray","array","arr","slice","i","length","j","Math","floor","random","shuffleOptionsAndPatterns","options","patterns","pairs","map","option","pattern","shuffled","p","QuestionsScreen","_ref","questionsUrl","onComplete","userData","timeDisplay","fullName","console","log","fetch","then","r","text","txt","data","JSON","parse","e","questions","setQuestions","loading","setLoading","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","userPatterns","setUserPatterns","showError","setShowError","selected","setSelected","error","setError","loadQuestions","response","ok","Error","status","json","Array","isArray","questionsWithPatterns","q","err","message","_userAnswers$currentQ","handleSelect","handleNext","answerArr","patternArr","question","selectedIdx","indexOf","answers","handleBack","handleReload","className","style","display","children","id","textAlign","color","marginTop","onClick","type","name","value","checked","onChange","tabIndex","disabled"],"sources":["F:/web/ЗАКАЗЫ/АЙФОРДЖИ/project-pattern-test/project-root/frontend/src/components/Screens/QuestionsScreen.jsx"],"sourcesContent":["//src/components/Screens/QuestionsScreen.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction shuffleArray(array) {\r\n\tconst arr = array.slice();\r\n\tfor (let i = arr.length - 1; i > 0; i--) {\r\n\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t[arr[i], arr[j]] = [arr[j], arr[i]];\r\n\t}\r\n\treturn arr;\r\n}\r\n\r\nfunction shuffleOptionsAndPatterns(options, patterns) {\r\n\tconst pairs = options.map((option, i) => ({\r\n\t\toption,\r\n\t\tpattern: patterns[i],\r\n\t}));\r\n\tconst shuffled = shuffleArray(pairs);\r\n\treturn {\r\n\t\toptions: shuffled.map(p => p.option),\r\n\t\tpatterns: shuffled.map(p => p.pattern),\r\n\t};\r\n}\r\n\r\nconst QuestionsScreen = ({\r\n\tquestionsUrl = '/pattern-test/data/questions.json',\r\n\tonComplete,\r\n\tuserData,\r\n\ttimeDisplay = ''\r\n}) => {\r\n\r\n\tconst fullName = userData?.fullName || \"\";\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"QuestionsScreen mounted\");\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('/pattern-test/data/questions.json')\r\n\t\t\t.then(r => r.text())\r\n\t\t\t.then(txt => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst data = JSON.parse(txt);\r\n\r\n\t\t\t\t} catch (e) {\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}, []);\r\n\t// questions: [{ question, options, patterns }]\r\n\tconst [questions, setQuestions] = useState([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n\tconst [userAnswers, setUserAnswers] = useState([]);\r\n\tconst [userPatterns, setUserPatterns] = useState([]);\r\n\tconst [showError, setShowError] = useState(false);\r\n\tconst [selected, setSelected] = useState(null);\r\n\tconst [error, setError] = useState('');\r\n\r\n\t// Загрузка и перемешивание вопросов\r\n\tuseEffect(() => {\r\n\t\tconst loadQuestions = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tsetError('');\r\n\t\t\t\tconst response = await fetch(questionsUrl);\r\n\t\t\t\tif (!response.ok) throw new Error(`Ошибка HTTP: статус ${response.status}`);\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tif (\r\n\t\t\t\t\t!Array.isArray(data.questionsWithPatterns) ||\r\n\t\t\t\t\tdata.questionsWithPatterns.length === 0\r\n\t\t\t\t) {\r\n\t\t\t\t\tthrow new Error('Данные тестов не найдены.');\r\n\t\t\t\t}\r\n\t\t\t\t// Перемешиваем вопросы и варианты\r\n\t\t\t\tconst shuffled = shuffleArray(data.questionsWithPatterns.map(q => ({\r\n\t\t\t\t\t...q,\r\n\t\t\t\t\t// Перемешиваем опции и patterns синхронно\r\n\t\t\t\t\t...shuffleOptionsAndPatterns(q.options, q.patterns),\r\n\t\t\t\t})));\r\n\t\t\t\tsetQuestions(shuffled);\r\n\t\t\t\tsetUserAnswers([]);\r\n\t\t\t\tsetUserPatterns([]);\r\n\t\t\t\tsetCurrentQuestionIndex(0);\r\n\t\t\t\tsetSelected(null);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetError(err.message || 'Ошибка загрузки вопросов');\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\t\tloadQuestions();\r\n\t}, [questionsUrl]);\r\n\r\n\t// Обновление выбора при смене вопроса\r\n\tuseEffect(() => {\r\n\t\tsetSelected(userAnswers[currentQuestionIndex] ?? null);\r\n\t\tsetShowError(false);\r\n\t}, [currentQuestionIndex, userAnswers]);\r\n\r\n\t// Обработка выбора\r\n\tconst handleSelect = (option) => {\r\n\t\tsetSelected(option);\r\n\t\tsetShowError(false);\r\n\t};\r\n\r\n\t// Следующий вопрос или завершение\r\n\tconst handleNext = () => {\r\n\t\tif (selected == null) {\r\n\t\t\tsetShowError(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Сохраняем ответ и паттерн\r\n\t\tconst answerArr = [...userAnswers];\r\n\t\tconst patternArr = [...userPatterns];\r\n\t\tanswerArr[currentQuestionIndex] = selected;\r\n\r\n\t\t// Определяем индекс выбранного варианта для паттерна\r\n\t\tconst question = questions[currentQuestionIndex];\r\n\t\tconst selectedIdx = question.options.indexOf(selected);\r\n\t\tpatternArr[currentQuestionIndex] = question.patterns[selectedIdx];\r\n\r\n\t\tsetUserAnswers(answerArr);\r\n\t\tsetUserPatterns(patternArr);\r\n\r\n\t\tif (currentQuestionIndex + 1 < questions.length) {\r\n\t\t\tsetCurrentQuestionIndex(currentQuestionIndex + 1);\r\n\t\t} else {\r\n\t\t\t// Передаем ответы и паттерны\r\n\t\t\tif (onComplete) onComplete({ answers: answerArr, patterns: patternArr });\r\n\t\t}\r\n\t};\r\n\r\n\t// Назад\r\n\tconst handleBack = () => {\r\n\t\tif (currentQuestionIndex > 0) {\r\n\t\t\tsetCurrentQuestionIndex(currentQuestionIndex - 1);\r\n\t\t\tsetShowError(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// Повторить тест\r\n\tconst handleReload = () => {\r\n\t\tsetQuestions([]);\r\n\t\tsetLoading(true);\r\n\t\tsetError('');\r\n\t\tsetCurrentQuestionIndex(0);\r\n\t\tsetUserAnswers([]);\r\n\t\tsetUserPatterns([]);\r\n\t\tsetSelected(null);\r\n\t};\r\n\r\n\t// Тестовая кнопка: заполнить все ответы автоматически и перейти к результатам\r\n/* \tconst handleFillTestAnswers = () => {\r\n\t\tif (!questions.length) return;\r\n\t\tconst autoAnswers = questions.map(q => q.options[0] ?? '');\r\n\t\tconst autoPatterns = questions.map(q => q.patterns[0] ?? '');\r\n\t\tif (onComplete) onComplete({ answers: autoAnswers, patterns: autoPatterns });\r\n\t}; */\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div className=\"question-test\" style={{ display: 'block' }}>\r\n\t\t\t\t<div className=\"question-test__container\"><div className=\"question-header\">\r\n\t\t\t\t\t<div id=\"fio-display\">ФИО: <span>{fullName}</span></div>\r\n\t\t\t\t\t<div id=\"time-display\">Дата: <span>{timeDisplay}</span></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"question-test__content\">\r\n\t\t\t\t\t\t<div className=\"question__loader-test\" style={{ display: 'block', textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t<div>Загрузка вопросов...</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (error) {\r\n\t\treturn (\r\n\t\t\t<div className=\"question-test\" style={{ display: 'block' }}>\r\n\t\t\t\t<div className=\"question-test__container\">\r\n\t\t\t\t\t<div className=\"question-test__content\">\r\n\t\t\t\t\t\t<div className=\"error-message\" style={{ color: '#dc2626', marginTop: 10 }}>{error}</div>\r\n\t\t\t\t\t\t<button className=\"patterns-button\" onClick={handleReload}>Повторить попытку</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// Главная защита от выхода за пределы массива вопросов\r\n\tconst question = questions[currentQuestionIndex];\r\n\tif (!questions.length || !question) return null;\r\n\r\n\treturn (\r\n\t\t<div className=\"question-test\">\r\n\t\t\t<div className=\"question-test__container\">\r\n\t\t\t\t<div className=\"question-test__content\">\r\n\t\t\t\t\t{/* Верхний блок с ФИО и временем */}\r\n\t\t\t\t\t<div className=\"question-test__info\">\r\n\t\t\t\t\t\t<div id=\"fio-display\" className=\"question-block__item\">\r\n\t\t\t\t\t\t\tФИО: <span>{fullName}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"time-display\" className=\"question-block__item\">\r\n\t\t\t\t\t\t\tДата: <span>{timeDisplay}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* Счетчик вопроса */}\r\n\t\t\t\t\t<div className=\"question-test__counter\">\r\n\t\t\t\t\t\tВопрос {currentQuestionIndex + 1} из {questions.length}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"question-test__block\">\r\n\r\n\t\t\t\t\t\t<div className=\"question-test__question\">{question.question}</div>\r\n\t\t\t\t\t\t<div className=\"question-test__options\" >\r\n\t\t\t\t\t\t\t{question.options.map((option, i) => (\r\n\t\t\t\t\t\t\t\t<label className=\"question-test__option\" key={i}>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\tname={`answer_${currentQuestionIndex}`}\r\n\t\t\t\t\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t\t\t\t\t\tchecked={selected === option}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => handleSelect(option)}\r\n\t\t\t\t\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<span className=\"question-test__radio-label\">{option}</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* Сообщение об ошибке */}\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tid=\"error-message\"\r\n\t\t\t\t\t\t\tclassName=\"error-message\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdisplay: showError ? 'block' : 'none',\r\n\t\t\t\t\t\t\t\tcolor: '#dc2626',\r\n\t\t\t\t\t\t\t\tmarginTop: 10,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tПожалуйста, выберите вариант ответа!\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* Кнопки навигации */}\r\n\t\t\t\t\t\t<div className=\"question-test__navigation\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"patterns-button patterns-button-prev\"\r\n\t\t\t\t\t\t\t\tid=\"prev-button\"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tonClick={handleBack}\r\n\t\t\t\t\t\t\t\tdisabled={currentQuestionIndex === 0}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tНазад\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"patterns-button patterns-button-next\"\r\n\t\t\t\t\t\t\t\tid=\"next-button\"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tonClick={handleNext}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{currentQuestionIndex + 1 < questions.length ? 'Далее' : 'Завершить'}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* --- Тестовая кнопка --- */}\r\n\t\t\t\t\t{/* <button\r\n\t\t\t\t\t\tclassName=\"patterns-button\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tstyle={{ margin: '20px auto', display: 'block' }}\r\n\t\t\t\t\t\tonClick={handleFillTestAnswers}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tЗаполнить тестовые ответы\r\n\t\t\t\t\t</button> */}\r\n\t\t\t\t\t{/* --- Конец тестовой кнопки --- */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuestionsScreen;"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,YAAYA,CAACC,KAAK,CAAE,CAC5B,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,KAAK,CAAC,CAAC,CACzB,IAAK,GAAI,CAAAC,CAAC,CAAGF,GAAG,CAACG,MAAM,CAAG,CAAC,CAAED,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CACxC,KAAM,CAAAE,CAAC,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAIL,CAAC,CAAG,CAAC,CAAC,CAAC,CAC7C,CAACF,GAAG,CAACE,CAAC,CAAC,CAAEF,GAAG,CAACI,CAAC,CAAC,CAAC,CAAG,CAACJ,GAAG,CAACI,CAAC,CAAC,CAAEJ,GAAG,CAACE,CAAC,CAAC,CAAC,CACpC,CACA,MAAO,CAAAF,GAAG,CACX,CAEA,QAAS,CAAAQ,yBAAyBA,CAACC,OAAO,CAAEC,QAAQ,CAAE,CACrD,KAAM,CAAAC,KAAK,CAAGF,OAAO,CAACG,GAAG,CAAC,CAACC,MAAM,CAAEX,CAAC,IAAM,CACzCW,MAAM,CACNC,OAAO,CAAEJ,QAAQ,CAACR,CAAC,CACpB,CAAC,CAAC,CAAC,CACH,KAAM,CAAAa,QAAQ,CAAGjB,YAAY,CAACa,KAAK,CAAC,CACpC,MAAO,CACNF,OAAO,CAAEM,QAAQ,CAACH,GAAG,CAACI,CAAC,EAAIA,CAAC,CAACH,MAAM,CAAC,CACpCH,QAAQ,CAAEK,QAAQ,CAACH,GAAG,CAACI,CAAC,EAAIA,CAAC,CAACF,OAAO,CACtC,CAAC,CACF,CAEA,KAAM,CAAAG,eAAe,CAAGC,IAAA,EAKlB,IALmB,CACxBC,YAAY,CAAG,mCAAmC,CAClDC,UAAU,CACVC,QAAQ,CACRC,WAAW,CAAG,EACf,CAAC,CAAAJ,IAAA,CAEA,KAAM,CAAAK,QAAQ,CAAG,CAAAF,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEE,QAAQ,GAAI,EAAE,CAEzC9B,SAAS,CAAC,IAAM,CACf+B,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACvC,CAAC,CAAE,EAAE,CAAC,CAGNhC,SAAS,CAAC,IAAM,CACfiC,KAAK,CAAC,mCAAmC,CAAC,CACxCC,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACnBF,IAAI,CAACG,GAAG,EAAI,CACZ,GAAI,CACH,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC,CAE7B,CAAE,MAAOI,CAAC,CAAE,CAEZ,CACD,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CACN;AACA,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAG5C,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAC6C,OAAO,CAAEC,UAAU,CAAC,CAAG9C,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC+C,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGhD,QAAQ,CAAC,CAAC,CAAC,CACnE,KAAM,CAACiD,WAAW,CAAEC,cAAc,CAAC,CAAGlD,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACmD,YAAY,CAAEC,eAAe,CAAC,CAAGpD,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACqD,SAAS,CAAEC,YAAY,CAAC,CAAGtD,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACuD,QAAQ,CAAEC,WAAW,CAAC,CAAGxD,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACyD,KAAK,CAAEC,QAAQ,CAAC,CAAG1D,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACAC,SAAS,CAAC,IAAM,CACf,KAAM,CAAA0D,aAAa,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACHb,UAAU,CAAC,IAAI,CAAC,CAChBY,QAAQ,CAAC,EAAE,CAAC,CACZ,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA1B,KAAK,CAACP,YAAY,CAAC,CAC1C,GAAI,CAACiC,QAAQ,CAACC,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC,CAC3E,KAAM,CAAAxB,IAAI,CAAG,KAAM,CAAAqB,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,GACC,CAACC,KAAK,CAACC,OAAO,CAAC3B,IAAI,CAAC4B,qBAAqB,CAAC,EAC1C5B,IAAI,CAAC4B,qBAAqB,CAACxD,MAAM,GAAK,CAAC,CACtC,CACD,KAAM,IAAI,CAAAmD,KAAK,CAAC,2BAA2B,CAAC,CAC7C,CACA;AACA,KAAM,CAAAvC,QAAQ,CAAGjB,YAAY,CAACiC,IAAI,CAAC4B,qBAAqB,CAAC/C,GAAG,CAACgD,CAAC,GAAK,CAClE,GAAGA,CAAC,CACJ;AACA,GAAGpD,yBAAyB,CAACoD,CAAC,CAACnD,OAAO,CAAEmD,CAAC,CAAClD,QAAQ,CACnD,CAAC,CAAC,CAAC,CAAC,CACJ0B,YAAY,CAACrB,QAAQ,CAAC,CACtB2B,cAAc,CAAC,EAAE,CAAC,CAClBE,eAAe,CAAC,EAAE,CAAC,CACnBJ,uBAAuB,CAAC,CAAC,CAAC,CAC1BQ,WAAW,CAAC,IAAI,CAAC,CAClB,CAAE,MAAOa,GAAG,CAAE,CACbX,QAAQ,CAACW,GAAG,CAACC,OAAO,EAAI,0BAA0B,CAAC,CACpD,CAAC,OAAS,CACTxB,UAAU,CAAC,KAAK,CAAC,CAClB,CACD,CAAC,CACDa,aAAa,CAAC,CAAC,CAChB,CAAC,CAAE,CAAChC,YAAY,CAAC,CAAC,CAElB;AACA1B,SAAS,CAAC,IAAM,KAAAsE,qBAAA,CACff,WAAW,EAAAe,qBAAA,CAACtB,WAAW,CAACF,oBAAoB,CAAC,UAAAwB,qBAAA,UAAAA,qBAAA,CAAI,IAAI,CAAC,CACtDjB,YAAY,CAAC,KAAK,CAAC,CACpB,CAAC,CAAE,CAACP,oBAAoB,CAAEE,WAAW,CAAC,CAAC,CAEvC;AACA,KAAM,CAAAuB,YAAY,CAAInD,MAAM,EAAK,CAChCmC,WAAW,CAACnC,MAAM,CAAC,CACnBiC,YAAY,CAAC,KAAK,CAAC,CACpB,CAAC,CAED;AACA,KAAM,CAAAmB,UAAU,CAAGA,CAAA,GAAM,CACxB,GAAIlB,QAAQ,EAAI,IAAI,CAAE,CACrBD,YAAY,CAAC,IAAI,CAAC,CAClB,OACD,CAEA;AACA,KAAM,CAAAoB,SAAS,CAAG,CAAC,GAAGzB,WAAW,CAAC,CAClC,KAAM,CAAA0B,UAAU,CAAG,CAAC,GAAGxB,YAAY,CAAC,CACpCuB,SAAS,CAAC3B,oBAAoB,CAAC,CAAGQ,QAAQ,CAE1C;AACA,KAAM,CAAAqB,QAAQ,CAAGjC,SAAS,CAACI,oBAAoB,CAAC,CAChD,KAAM,CAAA8B,WAAW,CAAGD,QAAQ,CAAC3D,OAAO,CAAC6D,OAAO,CAACvB,QAAQ,CAAC,CACtDoB,UAAU,CAAC5B,oBAAoB,CAAC,CAAG6B,QAAQ,CAAC1D,QAAQ,CAAC2D,WAAW,CAAC,CAEjE3B,cAAc,CAACwB,SAAS,CAAC,CACzBtB,eAAe,CAACuB,UAAU,CAAC,CAE3B,GAAI5B,oBAAoB,CAAG,CAAC,CAAGJ,SAAS,CAAChC,MAAM,CAAE,CAChDqC,uBAAuB,CAACD,oBAAoB,CAAG,CAAC,CAAC,CAClD,CAAC,IAAM,CACN;AACA,GAAInB,UAAU,CAAEA,UAAU,CAAC,CAAEmD,OAAO,CAAEL,SAAS,CAAExD,QAAQ,CAAEyD,UAAW,CAAC,CAAC,CACzE,CACD,CAAC,CAED;AACA,KAAM,CAAAK,UAAU,CAAGA,CAAA,GAAM,CACxB,GAAIjC,oBAAoB,CAAG,CAAC,CAAE,CAC7BC,uBAAuB,CAACD,oBAAoB,CAAG,CAAC,CAAC,CACjDO,YAAY,CAAC,KAAK,CAAC,CACpB,CACD,CAAC,CAED;AACA,KAAM,CAAA2B,YAAY,CAAGA,CAAA,GAAM,CAC1BrC,YAAY,CAAC,EAAE,CAAC,CAChBE,UAAU,CAAC,IAAI,CAAC,CAChBY,QAAQ,CAAC,EAAE,CAAC,CACZV,uBAAuB,CAAC,CAAC,CAAC,CAC1BE,cAAc,CAAC,EAAE,CAAC,CAClBE,eAAe,CAAC,EAAE,CAAC,CACnBI,WAAW,CAAC,IAAI,CAAC,CAClB,CAAC,CAED;AACD;AACA;AACA;AACA;AACA;AACA,MAEC,GAAIX,OAAO,CAAE,CACZ,mBACC1C,IAAA,QAAK+E,SAAS,CAAC,eAAe,CAACC,KAAK,CAAE,CAAEC,OAAO,CAAE,OAAQ,CAAE,CAAAC,QAAA,cAC1DhF,KAAA,QAAK6E,SAAS,CAAC,0BAA0B,CAAAG,QAAA,eAAChF,KAAA,QAAK6E,SAAS,CAAC,iBAAiB,CAAAG,QAAA,eACzEhF,KAAA,QAAKiF,EAAE,CAAC,aAAa,CAAAD,QAAA,EAAC,sBAAK,cAAAlF,IAAA,SAAAkF,QAAA,CAAOtD,QAAQ,CAAO,CAAC,EAAK,CAAC,cACxD1B,KAAA,QAAKiF,EAAE,CAAC,cAAc,CAAAD,QAAA,EAAC,4BAAM,cAAAlF,IAAA,SAAAkF,QAAA,CAAOvD,WAAW,CAAO,CAAC,EAAK,CAAC,EACzD,CAAC,cACL3B,IAAA,QAAK+E,SAAS,CAAC,wBAAwB,CAAAG,QAAA,cACtChF,KAAA,QAAK6E,SAAS,CAAC,uBAAuB,CAACC,KAAK,CAAE,CAAEC,OAAO,CAAE,OAAO,CAAEG,SAAS,CAAE,QAAS,CAAE,CAAAF,QAAA,eACvFlF,IAAA,UAAY,CAAC,cACbA,IAAA,QAAAkF,QAAA,CAAK,sGAAoB,CAAK,CAAC,EAC3B,CAAC,CACF,CAAC,EACF,CAAC,CACF,CAAC,CAER,CAEA,GAAI5B,KAAK,CAAE,CACV,mBACCtD,IAAA,QAAK+E,SAAS,CAAC,eAAe,CAACC,KAAK,CAAE,CAAEC,OAAO,CAAE,OAAQ,CAAE,CAAAC,QAAA,cAC1DlF,IAAA,QAAK+E,SAAS,CAAC,0BAA0B,CAAAG,QAAA,cACxChF,KAAA,QAAK6E,SAAS,CAAC,wBAAwB,CAAAG,QAAA,eACtClF,IAAA,QAAK+E,SAAS,CAAC,eAAe,CAACC,KAAK,CAAE,CAAEK,KAAK,CAAE,SAAS,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAJ,QAAA,CAAE5B,KAAK,CAAM,CAAC,cACxFtD,IAAA,WAAQ+E,SAAS,CAAC,iBAAiB,CAACQ,OAAO,CAAET,YAAa,CAAAI,QAAA,CAAC,mGAAiB,CAAQ,CAAC,EACjF,CAAC,CACF,CAAC,CACF,CAAC,CAER,CAEA;AACA,KAAM,CAAAT,QAAQ,CAAGjC,SAAS,CAACI,oBAAoB,CAAC,CAChD,GAAI,CAACJ,SAAS,CAAChC,MAAM,EAAI,CAACiE,QAAQ,CAAE,MAAO,KAAI,CAE/C,mBACCzE,IAAA,QAAK+E,SAAS,CAAC,eAAe,CAAAG,QAAA,cAC7BlF,IAAA,QAAK+E,SAAS,CAAC,0BAA0B,CAAAG,QAAA,cACxChF,KAAA,QAAK6E,SAAS,CAAC,wBAAwB,CAAAG,QAAA,eAEtChF,KAAA,QAAK6E,SAAS,CAAC,qBAAqB,CAAAG,QAAA,eACnChF,KAAA,QAAKiF,EAAE,CAAC,aAAa,CAACJ,SAAS,CAAC,sBAAsB,CAAAG,QAAA,EAAC,sBACjD,cAAAlF,IAAA,SAAAkF,QAAA,CAAOtD,QAAQ,CAAO,CAAC,EACxB,CAAC,cACN1B,KAAA,QAAKiF,EAAE,CAAC,cAAc,CAACJ,SAAS,CAAC,sBAAsB,CAAAG,QAAA,EAAC,4BACjD,cAAAlF,IAAA,SAAAkF,QAAA,CAAOvD,WAAW,CAAO,CAAC,EAC5B,CAAC,EACF,CAAC,cAGNzB,KAAA,QAAK6E,SAAS,CAAC,wBAAwB,CAAAG,QAAA,EAAC,uCAChC,CAACtC,oBAAoB,CAAG,CAAC,CAAC,gBAAI,CAACJ,SAAS,CAAChC,MAAM,EAClD,CAAC,cAENN,KAAA,QAAK6E,SAAS,CAAC,sBAAsB,CAAAG,QAAA,eAEpClF,IAAA,QAAK+E,SAAS,CAAC,yBAAyB,CAAAG,QAAA,CAAET,QAAQ,CAACA,QAAQ,CAAM,CAAC,cAClEzE,IAAA,QAAK+E,SAAS,CAAC,wBAAwB,CAAAG,QAAA,CACrCT,QAAQ,CAAC3D,OAAO,CAACG,GAAG,CAAC,CAACC,MAAM,CAAEX,CAAC,gBAC/BL,KAAA,UAAO6E,SAAS,CAAC,uBAAuB,CAAAG,QAAA,eACvClF,IAAA,UACCwF,IAAI,CAAC,OAAO,CACZC,IAAI,CAAE,UAAU7C,oBAAoB,EAAG,CACvC8C,KAAK,CAAExE,MAAO,CACdyE,OAAO,CAAEvC,QAAQ,GAAKlC,MAAO,CAC7B0E,QAAQ,CAAEA,CAAA,GAAMvB,YAAY,CAACnD,MAAM,CAAE,CACrC2E,QAAQ,CAAE,CAAE,CACZ,CAAC,cACF7F,IAAA,SAAM+E,SAAS,CAAC,4BAA4B,CAAAG,QAAA,CAAEhE,MAAM,CAAO,CAAC,GATfX,CAUvC,CACP,CAAC,CAEE,CAAC,cAENP,IAAA,QACCmF,EAAE,CAAC,eAAe,CAClBJ,SAAS,CAAC,eAAe,CACzBC,KAAK,CAAE,CACNC,OAAO,CAAE/B,SAAS,CAAG,OAAO,CAAG,MAAM,CACrCmC,KAAK,CAAE,SAAS,CAChBC,SAAS,CAAE,EACZ,CAAE,CAAAJ,QAAA,CACF,iMAED,CAAK,CAAC,cAGNhF,KAAA,QAAK6E,SAAS,CAAC,2BAA2B,CAAAG,QAAA,eACzClF,IAAA,WACC+E,SAAS,CAAC,sCAAsC,CAChDI,EAAE,CAAC,aAAa,CAChBK,IAAI,CAAC,QAAQ,CACbD,OAAO,CAAEV,UAAW,CACpBiB,QAAQ,CAAElD,oBAAoB,GAAK,CAAE,CAAAsC,QAAA,CACrC,gCAED,CAAQ,CAAC,cACTlF,IAAA,WACC+E,SAAS,CAAC,sCAAsC,CAChDI,EAAE,CAAC,aAAa,CAChBK,IAAI,CAAC,QAAQ,CACbD,OAAO,CAAEjB,UAAW,CAAAY,QAAA,CAEnBtC,oBAAoB,CAAG,CAAC,CAAGJ,SAAS,CAAChC,MAAM,CAAG,OAAO,CAAG,WAAW,CAC7D,CAAC,EACL,CAAC,EAGF,CAAC,EAWF,CAAC,CACF,CAAC,CACF,CAAC,CAER,CAAC,CAED,cAAe,CAAAc,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}