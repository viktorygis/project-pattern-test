{"ast":null,"code":"var _jsxFileName = \"F:\\\\web\\\\\\u0417\\u0410\\u041A\\u0410\\u0417\\u042B\\\\\\u0410\\u0419\\u0424\\u041E\\u0420\\u0414\\u0416\\u0418\\\\project-pattern-test\\\\project-root\\\\frontend\\\\src\\\\components\\\\Charts\\\\PatternBarChart.jsx\";\nimport React from \"react\";\nimport { getStrongPatternsByCategory, getTopCategoryByStrongPatterns } from \"../../utils/resultsHelpers\";\n\n/**\r\n\t* PatternBarChart\r\n\t* Визуализирует явно проявленные паттерны по категориям.\r\n\t* Рамка (\"border\") выделяет именно ту категорию, которую вычислила аналитика (topCategory).\r\n\t*\r\n\t* @param {Array} categories - список категорий паттернов\r\n\t* @param {Array} patternResults - результаты паттернов пользователя\r\n\t* @param {number} strongThreshold - порог для выделения сильных паттернов (по умолчанию 75)\r\n\t* @param {string} topCategoryFromResults - топовая категория из анализа (для полной синхронизации)\r\n\t*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatternBarChart = ({\n  categories,\n  patternResults,\n  strongThreshold = 75,\n  topCategoryFromResults // желательно передавать пропсом из resultsData.topCategory\n}) => {\n  // Получаем массив категорий с явно выраженными паттернами\n  const categoryWrappers = getStrongPatternsByCategory(categories, patternResults, strongThreshold);\n\n  // Только категории, где есть strongPatterns\n  const visibleCategoryWrappers = categoryWrappers.filter(cat => cat.strongPatterns.length > 0);\n\n  // Используем topCategory из пропса для синхронизации с InterpretationSection\n  const topCategory = topCategoryFromResults\n  // если не передан проп, вычисляем сами (но лучше передавать пропсом!)\n  || getTopCategoryByStrongPatterns(categories, patternResults, strongThreshold);\n\n  // Собираем легенду\n  const legendItems = [];\n  visibleCategoryWrappers.forEach(cat => {\n    cat.strongPatterns.forEach(p => {\n      if (p.abbr && !legendItems.find(l => l.abbr === p.abbr)) {\n        legendItems.push({\n          abbr: p.abbr,\n          name: p.name\n        });\n      }\n    });\n  });\n\n  // Для отладки (можно убрать)\n  // console.log(\"[PatternBarChart] topCategory:\", topCategory);\n  // console.log(\"[PatternBarChart] visibleCategoryWrappers:\", visibleCategoryWrappers);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"histogram__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"histogram__body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"histogram__title\",\n        children: \"\\u042F\\u0432\\u043D\\u043E \\u043F\\u0440\\u043E\\u044F\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043F\\u0430\\u0442\\u0442\\u0435\\u0440\\u043D\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"histogram__content\",\n        children: [visibleCategoryWrappers.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"histogram__category-wrapper\" + (cat.category === topCategory ? \" border\" : \"\"),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"histogram__category-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"histogram__category\",\n              children: cat.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"histogram__columns\",\n              children: cat.strongPatterns.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"histogram__column strong-pattern\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"histogram__pattern\",\n                  children: p.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"histogram__pattern-abr\",\n                  children: p.abbr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"histogram__bar-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"histogram__bar \" + p.cssClass,\n                    style: {\n                      width: `${p.percent}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"histogram__percentage\" + (p.percent === 100 ? \" maximum\" : \"\"),\n                  children: [p.percent, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 12\n                }, this)]\n              }, p.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 8\n          }, this), cat.description && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"histogram__category-description\",\n            children: cat.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this)]\n        }, cat.category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u0423\\u0441\\u043B\\u043E\\u0432\\u043D\\u044B\\u0435 \\u043E\\u0431\\u043E\\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend__grid\",\n            children: legendItems.map(l => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"abbreviation\",\n                children: l.abbr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 10\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 57\n              }, this), \" \", l.name]\n            }, l.abbr, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n_c = PatternBarChart;\nexport default PatternBarChart;\nvar _c;\n$RefreshReg$(_c, \"PatternBarChart\");","map":{"version":3,"names":["React","getStrongPatternsByCategory","getTopCategoryByStrongPatterns","jsxDEV","_jsxDEV","PatternBarChart","categories","patternResults","strongThreshold","topCategoryFromResults","categoryWrappers","visibleCategoryWrappers","filter","cat","strongPatterns","length","topCategory","legendItems","forEach","p","abbr","find","l","push","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","cssClass","style","width","percent","description","_c","$RefreshReg$"],"sources":["F:/web/ЗАКАЗЫ/АЙФОРДЖИ/project-pattern-test/project-root/frontend/src/components/Charts/PatternBarChart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n\tgetStrongPatternsByCategory,\r\n\tgetTopCategoryByStrongPatterns\r\n} from \"../../utils/resultsHelpers\";\r\n\r\n/**\r\n\t* PatternBarChart\r\n\t* Визуализирует явно проявленные паттерны по категориям.\r\n\t* Рамка (\"border\") выделяет именно ту категорию, которую вычислила аналитика (topCategory).\r\n\t*\r\n\t* @param {Array} categories - список категорий паттернов\r\n\t* @param {Array} patternResults - результаты паттернов пользователя\r\n\t* @param {number} strongThreshold - порог для выделения сильных паттернов (по умолчанию 75)\r\n\t* @param {string} topCategoryFromResults - топовая категория из анализа (для полной синхронизации)\r\n\t*/\r\nconst PatternBarChart = ({\r\n\tcategories,\r\n\tpatternResults,\r\n\tstrongThreshold = 75,\r\n\ttopCategoryFromResults // желательно передавать пропсом из resultsData.topCategory\r\n}) => {\r\n\t// Получаем массив категорий с явно выраженными паттернами\r\n\tconst categoryWrappers = getStrongPatternsByCategory(categories, patternResults, strongThreshold);\r\n\r\n\t// Только категории, где есть strongPatterns\r\n\tconst visibleCategoryWrappers = categoryWrappers.filter(\r\n\t\t(cat) => cat.strongPatterns.length > 0\r\n\t);\r\n\r\n\t// Используем topCategory из пропса для синхронизации с InterpretationSection\r\n\tconst topCategory = topCategoryFromResults\r\n\t\t// если не передан проп, вычисляем сами (но лучше передавать пропсом!)\r\n\t\t|| getTopCategoryByStrongPatterns(categories, patternResults, strongThreshold);\r\n\r\n\t// Собираем легенду\r\n\tconst legendItems = [];\r\n\tvisibleCategoryWrappers.forEach((cat) => {\r\n\t\tcat.strongPatterns.forEach((p) => {\r\n\t\t\tif (p.abbr && !legendItems.find((l) => l.abbr === p.abbr)) {\r\n\t\t\t\tlegendItems.push({ abbr: p.abbr, name: p.name });\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\t// Для отладки (можно убрать)\r\n\t// console.log(\"[PatternBarChart] topCategory:\", topCategory);\r\n\t// console.log(\"[PatternBarChart] visibleCategoryWrappers:\", visibleCategoryWrappers);\r\n\r\n\treturn (\r\n\t\t<div className=\"histogram__container\">\r\n\t\t\t<div className=\"histogram__body\">\r\n\t\t\t\t<h3 className=\"histogram__title\">Явно проявленные паттерны</h3>\r\n\t\t\t\t<div className=\"histogram__content\">\r\n\t\t\t\t\t{visibleCategoryWrappers.map((cat) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={cat.category}\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\"histogram__category-wrapper\" +\r\n\t\t\t\t\t\t\t\t(cat.category === topCategory ? \" border\" : \"\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"histogram__category-row\">\r\n\t\t\t\t\t\t\t\t<div className=\"histogram__category\">{cat.category}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"histogram__columns\">\r\n\t\t\t\t\t\t\t\t\t{cat.strongPatterns.map((p) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"histogram__column strong-pattern\" key={p.name}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"histogram__pattern\">{p.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"histogram__pattern-abr\">{p.abbr}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"histogram__bar-container\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"histogram__bar \" + p.cssClass}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: `${p.percent}%` }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"histogram__percentage\" +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(p.percent === 100 ? \" maximum\" : \"\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{p.percent}%\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{cat.description && (\r\n\t\t\t\t\t\t\t\t<div className=\"histogram__category-description\">{cat.description}</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<div className=\"legend\">\r\n\t\t\t\t\t\t<h4>Условные обозначения:</h4>\r\n\t\t\t\t\t\t<div className=\"legend__grid\">\r\n\t\t\t\t\t\t\t{legendItems.map((l) => (\r\n\t\t\t\t\t\t\t\t<div className=\"legend__item\" key={l.abbr}>\r\n\t\t\t\t\t\t\t\t\t<span className=\"abbreviation\">{l.abbr}</span> <span>-</span> {l.name}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PatternBarChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}