{"ast":null,"code":"import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\nexport { PIPE_TYPE, createPipe, pipe };","map":{"version":3,"names":["createMask","IMask","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","arg","from","to","masked","value","runIsolated","m","pipe","mask"],"sources":["F:/web/ЗАКАЗЫ/АЙФОРДЖИ/project-pattern-test/project-root/frontend/node_modules/imask/esm/masked/pipe.js"],"sourcesContent":["import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAO,kBAAkB;;AAEzB;AACA,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAE,OAAO;EACfC,QAAQ,EAAE,eAAe;EACzBC,KAAK,EAAE;AACT,CAAC;AACD;AACA,SAASC,UAAUA,CAACC,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAE;EACjC,IAAID,IAAI,KAAK,KAAK,CAAC,EAAE;IACnBA,IAAI,GAAGN,SAAS,CAACC,MAAM;EACzB;EACA,IAAIM,EAAE,KAAK,KAAK,CAAC,EAAE;IACjBA,EAAE,GAAGP,SAAS,CAACC,MAAM;EACvB;EACA,MAAMO,MAAM,GAAGV,UAAU,CAACO,GAAG,CAAC;EAC9B,OAAOI,KAAK,IAAID,MAAM,CAACE,WAAW,CAACC,CAAC,IAAI;IACtCA,CAAC,CAACL,IAAI,CAAC,GAAGG,KAAK;IACf,OAAOE,CAAC,CAACJ,EAAE,CAAC;EACd,CAAC,CAAC;AACJ;;AAEA;AACA,SAASK,IAAIA,CAACH,KAAK,EAAEI,IAAI,EAAEP,IAAI,EAAEC,EAAE,EAAE;EACnC,OAAOH,UAAU,CAACS,IAAI,EAAEP,IAAI,EAAEC,EAAE,CAAC,CAACE,KAAK,CAAC;AAC1C;AACAV,KAAK,CAACC,SAAS,GAAGA,SAAS;AAC3BD,KAAK,CAACK,UAAU,GAAGA,UAAU;AAC7BL,KAAK,CAACa,IAAI,GAAGA,IAAI;AAEjB,SAASZ,SAAS,EAAEI,UAAU,EAAEQ,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}