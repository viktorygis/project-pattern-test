{"ast":null,"code":"import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  /** Can skip chars */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      tailShift: 0,\n      skip: false\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.inserted += details.inserted;\n    this.rawInserted += details.rawInserted;\n    this.tailShift += details.tailShift;\n    this.skip = this.skip || details.skip;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n  get consumed() {\n    return Boolean(this.rawInserted) || this.skip;\n  }\n  equals(details) {\n    return this.inserted === details.inserted && this.tailShift === details.tailShift && this.rawInserted === details.rawInserted && this.skip === details.skip;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\nexport { ChangeDetails as default };","map":{"version":3,"names":["IMask","ChangeDetails","normalize","prep","Array","isArray","constructor","details","Object","assign","inserted","rawInserted","tailShift","skip","aggregate","offset","length","consumed","Boolean","equals","default"],"sources":["F:/web/ЗАКАЗЫ/АЙФОРДЖИ/project-pattern-test/project-root/frontend/node_modules/imask/esm/core/change-details.js"],"sourcesContent":["import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  /** Can skip chars */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      tailShift: 0,\n      skip: false\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.inserted += details.inserted;\n    this.rawInserted += details.rawInserted;\n    this.tailShift += details.tailShift;\n    this.skip = this.skip || details.skip;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n  get consumed() {\n    return Boolean(this.rawInserted) || this.skip;\n  }\n  equals(details) {\n    return this.inserted === details.inserted && this.tailShift === details.tailShift && this.rawInserted === details.rawInserted && this.skip === details.skip;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,aAAa;;AAE/B;AACA,MAAMC,aAAa,CAAC;EAClB;;EAEA;;EAEA;;EAEA;;EAEA,OAAOC,SAASA,CAACC,IAAI,EAAE;IACrB,OAAOC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,EAAE,IAAIF,aAAa,CAAC,CAAC,CAAC;EACjE;EACAK,WAAWA,CAACC,OAAO,EAAE;IACnBC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAE;MAClBC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,CAAC;MACZC,IAAI,EAAE;IACR,CAAC,EAAEN,OAAO,CAAC;EACb;;EAEA;EACAO,SAASA,CAACP,OAAO,EAAE;IACjB,IAAI,CAACG,QAAQ,IAAIH,OAAO,CAACG,QAAQ;IACjC,IAAI,CAACC,WAAW,IAAIJ,OAAO,CAACI,WAAW;IACvC,IAAI,CAACC,SAAS,IAAIL,OAAO,CAACK,SAAS;IACnC,IAAI,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,IAAIN,OAAO,CAACM,IAAI;IACrC,OAAO,IAAI;EACb;;EAEA;EACA,IAAIE,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACH,SAAS,GAAG,IAAI,CAACF,QAAQ,CAACM,MAAM;EAC9C;EACA,IAAIC,QAAQA,CAAA,EAAG;IACb,OAAOC,OAAO,CAAC,IAAI,CAACP,WAAW,CAAC,IAAI,IAAI,CAACE,IAAI;EAC/C;EACAM,MAAMA,CAACZ,OAAO,EAAE;IACd,OAAO,IAAI,CAACG,QAAQ,KAAKH,OAAO,CAACG,QAAQ,IAAI,IAAI,CAACE,SAAS,KAAKL,OAAO,CAACK,SAAS,IAAI,IAAI,CAACD,WAAW,KAAKJ,OAAO,CAACI,WAAW,IAAI,IAAI,CAACE,IAAI,KAAKN,OAAO,CAACM,IAAI;EAC7J;AACF;AACAb,KAAK,CAACC,aAAa,GAAGA,aAAa;AAEnC,SAASA,aAAa,IAAImB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}