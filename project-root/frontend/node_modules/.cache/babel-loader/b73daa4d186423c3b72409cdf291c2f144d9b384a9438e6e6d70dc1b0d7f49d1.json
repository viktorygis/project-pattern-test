{"ast":null,"code":"class InputHistory {\n  constructor() {\n    this.states = [];\n    this.currentIndex = 0;\n  }\n  get currentState() {\n    return this.states[this.currentIndex];\n  }\n  get isEmpty() {\n    return this.states.length === 0;\n  }\n  push(state) {\n    // if current index points before the last element then remove the future\n    if (this.currentIndex < this.states.length - 1) this.states.length = this.currentIndex + 1;\n    this.states.push(state);\n    if (this.states.length > InputHistory.MAX_LENGTH) this.states.shift();\n    this.currentIndex = this.states.length - 1;\n  }\n  go(steps) {\n    this.currentIndex = Math.min(Math.max(this.currentIndex + steps, 0), this.states.length - 1);\n    return this.currentState;\n  }\n  undo() {\n    return this.go(-1);\n  }\n  redo() {\n    return this.go(+1);\n  }\n  clear() {\n    this.states.length = 0;\n    this.currentIndex = 0;\n  }\n}\nInputHistory.MAX_LENGTH = 100;\nexport { InputHistory as default };","map":{"version":3,"names":["InputHistory","constructor","states","currentIndex","currentState","isEmpty","length","push","state","MAX_LENGTH","shift","go","steps","Math","min","max","undo","redo","clear","default"],"sources":["F:/web/ЗАКАЗЫ/АЙФОРДЖИ/project-pattern-test/project-root/frontend/node_modules/imask/esm/controls/input-history.js"],"sourcesContent":["class InputHistory {\n  constructor() {\n    this.states = [];\n    this.currentIndex = 0;\n  }\n  get currentState() {\n    return this.states[this.currentIndex];\n  }\n  get isEmpty() {\n    return this.states.length === 0;\n  }\n  push(state) {\n    // if current index points before the last element then remove the future\n    if (this.currentIndex < this.states.length - 1) this.states.length = this.currentIndex + 1;\n    this.states.push(state);\n    if (this.states.length > InputHistory.MAX_LENGTH) this.states.shift();\n    this.currentIndex = this.states.length - 1;\n  }\n  go(steps) {\n    this.currentIndex = Math.min(Math.max(this.currentIndex + steps, 0), this.states.length - 1);\n    return this.currentState;\n  }\n  undo() {\n    return this.go(-1);\n  }\n  redo() {\n    return this.go(+1);\n  }\n  clear() {\n    this.states.length = 0;\n    this.currentIndex = 0;\n  }\n}\nInputHistory.MAX_LENGTH = 100;\n\nexport { InputHistory as default };\n"],"mappings":"AAAA,MAAMA,YAAY,CAAC;EACjBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,YAAY,GAAG,CAAC;EACvB;EACA,IAAIC,YAAYA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACF,MAAM,CAAC,IAAI,CAACC,YAAY,CAAC;EACvC;EACA,IAAIE,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACH,MAAM,CAACI,MAAM,KAAK,CAAC;EACjC;EACAC,IAAIA,CAACC,KAAK,EAAE;IACV;IACA,IAAI,IAAI,CAACL,YAAY,GAAG,IAAI,CAACD,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE,IAAI,CAACJ,MAAM,CAACI,MAAM,GAAG,IAAI,CAACH,YAAY,GAAG,CAAC;IAC1F,IAAI,CAACD,MAAM,CAACK,IAAI,CAACC,KAAK,CAAC;IACvB,IAAI,IAAI,CAACN,MAAM,CAACI,MAAM,GAAGN,YAAY,CAACS,UAAU,EAAE,IAAI,CAACP,MAAM,CAACQ,KAAK,CAAC,CAAC;IACrE,IAAI,CAACP,YAAY,GAAG,IAAI,CAACD,MAAM,CAACI,MAAM,GAAG,CAAC;EAC5C;EACAK,EAAEA,CAACC,KAAK,EAAE;IACR,IAAI,CAACT,YAAY,GAAGU,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,IAAI,CAACZ,YAAY,GAAGS,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,CAACV,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;IAC5F,OAAO,IAAI,CAACF,YAAY;EAC1B;EACAY,IAAIA,CAAA,EAAG;IACL,OAAO,IAAI,CAACL,EAAE,CAAC,CAAC,CAAC,CAAC;EACpB;EACAM,IAAIA,CAAA,EAAG;IACL,OAAO,IAAI,CAACN,EAAE,CAAC,CAAC,CAAC,CAAC;EACpB;EACAO,KAAKA,CAAA,EAAG;IACN,IAAI,CAAChB,MAAM,CAACI,MAAM,GAAG,CAAC;IACtB,IAAI,CAACH,YAAY,GAAG,CAAC;EACvB;AACF;AACAH,YAAY,CAACS,UAAU,GAAG,GAAG;AAE7B,SAAST,YAAY,IAAImB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}