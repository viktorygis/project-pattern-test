{"ast":null,"code":"import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n    if (this.insertedCount) {\n      // double check right part\n      while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n        if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n      }\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\nexport { ActionDetails as default };","map":{"version":3,"names":["DIRECTION","ActionDetails","constructor","opts","Object","assign","value","slice","startChangePos","oldValue","oldSelection","start","insertedCount","cursorPos","end","length","Math","min","inserted","substr","removedCount","max","removed","head","substring","tail","removeDirection","NONE","RIGHT","LEFT","default"],"sources":["F:/web/ЗАКАЗЫ/АЙФОРДЖИ/project-pattern-test/project-root/frontend/node_modules/imask/esm/core/action-details.js"],"sourcesContent":["import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n    if (this.insertedCount) {\n      // double check right part\n      while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n        if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n      }\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}