{"ast":null,"code":"const pageWidth = 595; // A4\n\nfunction createCenteredLine(lineWidth = 180, yPosition = 0) {\n  return {\n    canvas: [{\n      type: \"rect\",\n      x: (pageWidth - lineWidth) / 2,\n      y: yPosition,\n      w: lineWidth,\n      h: 1,\n      color: \"#ff008a\"\n    }],\n    margin: [0, 0, 0, 20],\n    relativePosition: {\n      x: -50,\n      y: 0\n    }\n  };\n}\nexport function pdfDominantPatternsBlock(categories, patternResults, strongThreshold = 75) {\n  // Приводим к массиву, если вдруг объект\n  if (!Array.isArray(categories)) {\n    categories = Object.values(categories || {});\n  }\n\n  // Собираем явно проявленные паттерны и их категории\n  let dominantPatterns = [];\n  let usedCategoryIds = new Set();\n  (categories || []).forEach(cat => {\n    (cat.subcategories || []).forEach(subcat => {\n      (subcat.patterns || []).forEach(pat => {\n        var _pat$pattern, _pat$pattern2, _pat$pattern3;\n        const patName = ((_pat$pattern = pat.pattern) === null || _pat$pattern === void 0 ? void 0 : _pat$pattern.ru) || ((_pat$pattern2 = pat.pattern) === null || _pat$pattern2 === void 0 ? void 0 : _pat$pattern2.en) || pat.name || \"\";\n        const abbr = ((_pat$pattern3 = pat.pattern) === null || _pat$pattern3 === void 0 ? void 0 : _pat$pattern3.abbreviation) || pat.abbreviation || \"\";\n        const result = (patternResults || []).find(r => {\n          var _r$pattern;\n          return typeof r.name === \"string\" && r.name.trim().toLowerCase() === patName.trim().toLowerCase() || typeof ((_r$pattern = r.pattern) === null || _r$pattern === void 0 ? void 0 : _r$pattern.ru) === \"string\" && r.pattern.ru.trim().toLowerCase() === patName.trim().toLowerCase();\n        });\n        const percent = (result === null || result === void 0 ? void 0 : result.percent) || (result === null || result === void 0 ? void 0 : result.percentage) || 0;\n        if (percent >= strongThreshold) {\n          var _cat$title, _cat$title2;\n          dominantPatterns.push({\n            name: patName,\n            abbr: abbr,\n            percent,\n            color: cat.color || \"#71717a\",\n            category: ((_cat$title = cat.title) === null || _cat$title === void 0 ? void 0 : _cat$title.ru) || ((_cat$title2 = cat.title) === null || _cat$title2 === void 0 ? void 0 : _cat$title2.en) || cat.name || \"\",\n            categoryId: cat.id\n          });\n          usedCategoryIds.add(cat.id);\n        }\n      });\n    });\n  });\n\n  // Список уникальных категорий из всех переданных категорий (всегда четыре), чтобы справа вывести их описание\n  const uniqueCategories = categories.map(cat => {\n    var _cat$title3, _cat$title4, _cat$benefit, _cat$benefit2;\n    return {\n      id: cat.id,\n      name: ((_cat$title3 = cat.title) === null || _cat$title3 === void 0 ? void 0 : _cat$title3.ru) || ((_cat$title4 = cat.title) === null || _cat$title4 === void 0 ? void 0 : _cat$title4.en) || cat.name || \"\",\n      color: cat.color || \"#cccccc\",\n      benefit: ((_cat$benefit = cat.benefit) === null || _cat$benefit === void 0 ? void 0 : _cat$benefit.ru) || ((_cat$benefit2 = cat.benefit) === null || _cat$benefit2 === void 0 ? void 0 : _cat$benefit2.en) || \"\"\n    };\n  });\n\n  // Левая колонка: паттерны — аббревиатура и название\n  const patternsList = dominantPatterns.map(item => ({\n    text: `${item.abbr}: ${item.name}`,\n    style: \"abbreviationLabel\"\n  }));\n\n  // Правая колонка: четыре категории, по одной на каждую\n  const categoriesList = uniqueCategories.map(cat => ({\n    columns: [{\n      width: 10,\n      canvas: [{\n        type: \"rect\",\n        x: 0,\n        y: 1,\n        w: 10,\n        h: 10,\n        color: cat.color\n      }]\n    }, {\n      width: \"*\",\n      stack: [{\n        text: cat.name,\n        style: \"categoryShortLabel\",\n        margin: [10, 0, 0, 0]\n      }, {\n        text: cat.benefit,\n        style: \"benefitLabel\",\n        margin: [10, 0, 0, 8]\n      }]\n    }],\n    margin: [0, 0, 0, 2],\n    columnGap: 0,\n    // <--- добавьте это!\n    layout: \"noBorders\" // <--- добавьте это!\n  }));\n\n  //Заголовок \"Явно проявленные паттерны\"\n  const content = [{\n    text: \"Явно проявленные паттерны\",\n    style: \"dominantTitle\",\n    margin: [0, 0, 0, 5]\n  }, createCenteredLine(300, 0), {\n    text: \"\",\n    margin: [0, 0, 0, 24]\n  }];\n\n  //выводим гистограмму и контент\n  if (dominantPatterns.length) {\n    // Гистограмма\n    const dominantPatternsColumns = dominantPatterns.map(pat => ({\n      stack: [{\n        text: `${pat.percent}%`,\n        alignment: \"center\",\n        margin: [0, 0, 0, 2],\n        fontSize: 12,\n        color: pat.percent === 100 ? \"#03d666\" : \"#000\"\n      }, {\n        canvas: [{\n          type: \"rect\",\n          x: 0,\n          y: 0,\n          w: 8,\n          h: 90,\n          color: \"#e0e0e0\",\n          r: 5\n        }, {\n          type: \"rect\",\n          x: 0,\n          y: 90 - Math.round(pat.percent / 100 * 90),\n          w: 8,\n          h: Math.round(pat.percent / 100 * 90),\n          color: pat.color,\n          r: 5\n        }],\n        margin: [0, 0, 0, 2],\n        height: 90,\n        width: 8,\n        alignment: \"center\"\n      }, {\n        text: pat.abbr,\n        alignment: \"center\",\n        margin: [0, 2, 0, 0],\n        fontSize: 12,\n        color: \"#505050\"\n      }],\n      margin: [0, 0, 0, 5]\n    }));\n    content.push({\n      columns: dominantPatternsColumns,\n      columnGap: 8 // можно уменьшить при желании\n    });\n\n    // Условные обозначения - заголовок\n    content.push({\n      text: \"Условные обозначения\",\n      style: \"dominantSubTitle\",\n      margin: [0, 20, 0, 5]\n    });\n\n    // Условные обозначения: две колонки — паттерны и категории\n    content.push({\n      columns: [{\n        width: \"50%\",\n        stack: patternsList\n      }, {\n        width: \"50%\",\n        stack: categoriesList\n      }],\n      columnGap: 32,\n      margin: [0, 0, 0, 16]\n    });\n  } else {\n    //Нет явно проявленных паттернов\n    content.push({\n      text: \"Нет явно проявленных паттернов\",\n      style: \"noQuestions\",\n      alignment: \"center\",\n      margin: [0, 20, 0, 20]\n    });\n  }\n  content.push({\n    text: \"\",\n    pageBreak: \"after\"\n  });\n  return content;\n}","map":{"version":3,"names":["pageWidth","createCenteredLine","lineWidth","yPosition","canvas","type","x","y","w","h","color","margin","relativePosition","pdfDominantPatternsBlock","categories","patternResults","strongThreshold","Array","isArray","Object","values","dominantPatterns","usedCategoryIds","Set","forEach","cat","subcategories","subcat","patterns","pat","_pat$pattern","_pat$pattern2","_pat$pattern3","patName","pattern","ru","en","name","abbr","abbreviation","result","find","r","_r$pattern","trim","toLowerCase","percent","percentage","_cat$title","_cat$title2","push","category","title","categoryId","id","add","uniqueCategories","map","_cat$title3","_cat$title4","_cat$benefit","_cat$benefit2","benefit","patternsList","item","text","style","categoriesList","columns","width","stack","columnGap","layout","content","length","dominantPatternsColumns","alignment","fontSize","Math","round","height","pageBreak"],"sources":["F:/web/ЗАКАЗЫ/АЙФОРДЖИ/project-pattern-test/project-root/frontend/src/utils/pdf/pdfDominantPatternsBlock.js"],"sourcesContent":["const pageWidth = 595; // A4\r\n\r\nfunction createCenteredLine(lineWidth = 180, yPosition = 0) {\r\n  return {\r\n    canvas: [\r\n      {\r\n        type: \"rect\",\r\n        x: (pageWidth - lineWidth) / 2,\r\n        y: yPosition,\r\n        w: lineWidth,\r\n        h: 1,\r\n        color: \"#ff008a\",\r\n      },\r\n    ],\r\n    margin: [0, 0, 0, 20],\r\n    relativePosition: { x: -50, y: 0 },\r\n  };\r\n}\r\n\r\nexport function pdfDominantPatternsBlock(categories, patternResults, strongThreshold = 75) {\r\n  // Приводим к массиву, если вдруг объект\r\n  if (!Array.isArray(categories)) {\r\n    categories = Object.values(categories || {});\r\n  }\r\n\r\n  // Собираем явно проявленные паттерны и их категории\r\n  let dominantPatterns = [];\r\n  let usedCategoryIds = new Set();\r\n\r\n  (categories || []).forEach((cat) => {\r\n    (cat.subcategories || []).forEach((subcat) => {\r\n      (subcat.patterns || []).forEach((pat) => {\r\n        const patName = pat.pattern?.ru || pat.pattern?.en || pat.name || \"\";\r\n        const abbr = pat.pattern?.abbreviation || pat.abbreviation || \"\";\r\n        const result = (patternResults || []).find(\r\n          (r) =>\r\n            (typeof r.name === \"string\" && r.name.trim().toLowerCase() === patName.trim().toLowerCase()) ||\r\n            (typeof r.pattern?.ru === \"string\" && r.pattern.ru.trim().toLowerCase() === patName.trim().toLowerCase())\r\n        );\r\n        const percent = result?.percent || result?.percentage || 0;\r\n        if (percent >= strongThreshold) {\r\n          dominantPatterns.push({\r\n            name: patName,\r\n            abbr: abbr,\r\n            percent,\r\n            color: cat.color || \"#71717a\",\r\n            category: cat.title?.ru || cat.title?.en || cat.name || \"\",\r\n            categoryId: cat.id,\r\n          });\r\n          usedCategoryIds.add(cat.id);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  // Список уникальных категорий из всех переданных категорий (всегда четыре), чтобы справа вывести их описание\r\n  const uniqueCategories = categories.map((cat) => ({\r\n    id: cat.id,\r\n    name: cat.title?.ru || cat.title?.en || cat.name || \"\",\r\n    color: cat.color || \"#cccccc\",\r\n    benefit: cat.benefit?.ru || cat.benefit?.en || \"\",\r\n  }));\r\n\r\n  // Левая колонка: паттерны — аббревиатура и название\r\n  const patternsList = dominantPatterns.map((item) => ({\r\n    text: `${item.abbr}: ${item.name}`,\r\n    style: \"abbreviationLabel\",\r\n  }));\r\n\r\n  // Правая колонка: четыре категории, по одной на каждую\r\n  const categoriesList = uniqueCategories.map((cat) => ({\r\n    columns: [\r\n      {\r\n        width: 10,\r\n        canvas: [\r\n          {\r\n            type: \"rect\",\r\n            x: 0,\r\n            y: 1,\r\n            w: 10,\r\n            h: 10,\r\n            color: cat.color,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        width: \"*\",\r\n        stack: [\r\n          { text: cat.name, style: \"categoryShortLabel\", margin: [10, 0, 0, 0] },\r\n          { text: cat.benefit, style: \"benefitLabel\", margin: [10, 0, 0, 8] },\r\n        ],\r\n      },\r\n    ],\r\n    margin: [0, 0, 0, 2],\r\n    columnGap: 0, // <--- добавьте это!\r\n    layout: \"noBorders\", // <--- добавьте это!\r\n  }));\r\n\r\n  //Заголовок \"Явно проявленные паттерны\"\r\n  const content = [\r\n    {\r\n      text: \"Явно проявленные паттерны\",\r\n      style: \"dominantTitle\",\r\n      margin: [0, 0, 0, 5],\r\n    },\r\n    createCenteredLine(300, 0),\r\n    { text: \"\", margin: [0, 0, 0, 24] },\r\n  ];\r\n\r\n  //выводим гистограмму и контент\r\n  if (dominantPatterns.length) {\r\n    // Гистограмма\r\n    const dominantPatternsColumns = dominantPatterns.map((pat) => ({\r\n      stack: [\r\n        {\r\n          text: `${pat.percent}%`,\r\n          alignment: \"center\",\r\n          margin: [0, 0, 0, 2],\r\n          fontSize: 12,\r\n          color: pat.percent === 100 ? \"#03d666\" : \"#000\",\r\n        },\r\n        {\r\n          canvas: [\r\n            {\r\n              type: \"rect\",\r\n              x: 0,\r\n              y: 0,\r\n              w: 8,\r\n              h: 90,\r\n              color: \"#e0e0e0\",\r\n              r: 5,\r\n            },\r\n            {\r\n              type: \"rect\",\r\n              x: 0,\r\n              y: 90 - Math.round((pat.percent / 100) * 90),\r\n              w: 8,\r\n              h: Math.round((pat.percent / 100) * 90),\r\n              color: pat.color,\r\n              r: 5,\r\n            },\r\n          ],\r\n          margin: [0, 0, 0, 2],\r\n          height: 90,\r\n          width: 8,\r\n          alignment: \"center\",\r\n        },\r\n        {\r\n          text: pat.abbr,\r\n          alignment: \"center\",\r\n          margin: [0, 2, 0, 0],\r\n          fontSize: 12,\r\n          color: \"#505050\",\r\n        },\r\n      ],\r\n      margin: [0, 0, 0, 5],\r\n    }));\r\n\r\n    content.push({\r\n      columns: dominantPatternsColumns,\r\n      columnGap: 8, // можно уменьшить при желании\r\n    });\r\n\r\n    // Условные обозначения - заголовок\r\n    content.push({\r\n      text: \"Условные обозначения\",\r\n      style: \"dominantSubTitle\",\r\n      margin: [0, 20, 0, 5],\r\n    });\r\n\r\n    // Условные обозначения: две колонки — паттерны и категории\r\n    content.push({\r\n      columns: [\r\n        { width: \"50%\", stack: patternsList },\r\n        { width: \"50%\", stack: categoriesList },\r\n      ],\r\n      columnGap: 32,\r\n      margin: [0, 0, 0, 16],\r\n    });\r\n  } else {\r\n    //Нет явно проявленных паттернов\r\n    content.push({\r\n      text: \"Нет явно проявленных паттернов\",\r\n      style: \"noQuestions\",\r\n      alignment: \"center\",\r\n      margin: [0, 20, 0, 20],\r\n    });\r\n  }\r\n\r\n  content.push({ text: \"\", pageBreak: \"after\" });\r\n  return content;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}