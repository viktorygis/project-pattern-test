{"ast":null,"code":"var _jsxFileName = \"F:\\\\web\\\\\\u0417\\u0410\\u041A\\u0410\\u0417\\u042B\\\\\\u0410\\u0419\\u0424\\u041E\\u0420\\u0414\\u0416\\u0418\\\\project-pattern-test\\\\project-root\\\\frontend\\\\src\\\\components\\\\pages\\\\PatternTestResultPage.jsx\",\n  _s = $RefreshSig$();\n//PatternTestResultPage.jsx\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ResultsScreen from \"../Screens/ResultsScreen\";\nimport { createResultsData, getTopPatterns, getTopCategory, getPatternMessage, getOpportunities, getBehaviorModel, getStrengths } from \"../../utils/resultsHelpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PatternTestResultPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [resultData, setResultData] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    fetch(process.env.PUBLIC_URL + \"/data/patterns.json\").then(res => res.json()).then(data => setCategories(Array.isArray(data.categories) ? data.categories : [])).catch(() => setCategories([]));\n  }, []);\n  useEffect(() => {\n    if (!id) return;\n    setLoading(true);\n    setError(false);\n    setResultData(null);\n    const localData = localStorage.getItem(`test-result-${id}`);\n    if (localData) {\n      setResultData(JSON.parse(localData));\n      setError(false);\n      setLoading(false);\n      return;\n    }\n    fetch(`/api/results/${id}`).then(response => {\n      if (!response.ok) throw new Error(\"No result\");\n      return response.json();\n    }).then(data => {\n      setResultData(data);\n      setError(false);\n    }).catch(() => {\n      setError(true);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [id]);\n  useEffect(() => {\n    if (error && categories.length && !resultData) {\n      setResultData({\n        user: {\n          fullName: \"Иван Иванов\",\n          phone: \"+79998887766\",\n          telegram: \"@ivanov\",\n          email: \"ivan@example.com\"\n        },\n        answers: Array(60).fill(\"Изобилие времени\"),\n        patterns: Array(60).fill(\"Изобилие времени\")\n      });\n    }\n  }, [error, categories, resultData]);\n\n  // Массив паттернов\n  const patternResultsStrings = useMemo(() => {\n    if (Array.isArray(resultData === null || resultData === void 0 ? void 0 : resultData.patterns)) {\n      return resultData.patterns.map(a => typeof a === \"string\" ? a : a.pattern || \"\");\n    }\n    // fallback: если patterns нет, используем answers (старые результаты)\n    if (Array.isArray(resultData === null || resultData === void 0 ? void 0 : resultData.answers)) {\n      return resultData.answers.map(a => typeof a === \"string\" ? a : a.pattern || \"\");\n    }\n    return [];\n  }, [resultData]);\n  const resultsData = useMemo(() => {\n    if (!resultData || !categories.length) return null;\n    return createResultsData({\n      userData: resultData.user,\n      categories,\n      patternResults: patternResultsStrings\n    });\n  }, [resultData, categories, patternResultsStrings]);\n  const topPatterns = useMemo(() => resultsData ? getTopPatterns(resultsData) : [], [resultsData]);\n  const topCategory = useMemo(() => resultsData ? getTopCategory(resultsData) : null, [resultsData]);\n  const patternMessage = useMemo(() => resultsData ? getPatternMessage(resultsData) : \"\", [resultsData]);\n  const opportunities = useMemo(() => resultsData ? getOpportunities(resultsData) : \"\", [resultsData]);\n  const behaviorModel = useMemo(() => resultsData ? getBehaviorModel(resultsData) : \"\", [resultsData]);\n  const strengths = useMemo(() => resultsData ? getStrengths(resultsData) : \"\", [resultsData]);\n  if (loading || !categories.length || !resultsData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ResultsScreen, {\n    resultsData: resultsData,\n    answers: resultData.answers,\n    patterns: patternResultsStrings,\n    categories: categories,\n    patternResults: resultsData.patternResults,\n    topPatterns: topPatterns,\n    topCategory: topCategory,\n    patternMessage: patternMessage,\n    opportunities: opportunities,\n    behaviorModel: behaviorModel,\n    strengths: strengths\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(PatternTestResultPage, \"TO2RCirYZCfoacQJ+g7xWBmc9D8=\", false, function () {\n  return [useParams];\n});\n_c = PatternTestResultPage;\nvar _c;\n$RefreshReg$(_c, \"PatternTestResultPage\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useParams","ResultsScreen","createResultsData","getTopPatterns","getTopCategory","getPatternMessage","getOpportunities","getBehaviorModel","getStrengths","jsxDEV","_jsxDEV","PatternTestResultPage","_s","id","resultData","setResultData","categories","setCategories","loading","setLoading","error","setError","fetch","process","env","PUBLIC_URL","then","res","json","data","Array","isArray","catch","localData","localStorage","getItem","JSON","parse","response","ok","Error","finally","length","user","fullName","phone","telegram","email","answers","fill","patterns","patternResultsStrings","map","a","pattern","resultsData","userData","patternResults","topPatterns","topCategory","patternMessage","opportunities","behaviorModel","strengths","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/web/ЗАКАЗЫ/АЙФОРДЖИ/project-pattern-test/project-root/frontend/src/components/pages/PatternTestResultPage.jsx"],"sourcesContent":["\r\n//PatternTestResultPage.jsx\r\nimport React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ResultsScreen from \"../Screens/ResultsScreen\";\r\nimport {\r\n  createResultsData,\r\n  getTopPatterns,\r\n  getTopCategory,\r\n  getPatternMessage,\r\n  getOpportunities,\r\n  getBehaviorModel,\r\n  getStrengths\r\n} from \"../../utils/resultsHelpers\";\r\n\r\nexport default function PatternTestResultPage() {\r\n  const { id } = useParams();\r\n  const [resultData, setResultData] = useState(null);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(process.env.PUBLIC_URL + \"/data/patterns.json\")\r\n      .then(res => res.json())\r\n      .then(data => setCategories(Array.isArray(data.categories) ? data.categories : []))\r\n      .catch(() => setCategories([]));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!id) return;\r\n    setLoading(true);\r\n    setError(false);\r\n    setResultData(null);\r\n\r\n    const localData = localStorage.getItem(`test-result-${id}`);\r\n    if (localData) {\r\n      setResultData(JSON.parse(localData));\r\n      setError(false);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    fetch(`/api/results/${id}`)\r\n      .then(response => {\r\n        if (!response.ok) throw new Error(\"No result\");\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setResultData(data);\r\n        setError(false);\r\n      })\r\n      .catch(() => {\r\n        setError(true);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (error && categories.length && !resultData) {\r\n      setResultData({\r\n        user: {\r\n          fullName: \"Иван Иванов\",\r\n          phone: \"+79998887766\",\r\n          telegram: \"@ivanov\",\r\n          email: \"ivan@example.com\"\r\n        },\r\n        answers: Array(60).fill(\"Изобилие времени\"),\r\n        patterns: Array(60).fill(\"Изобилие времени\")\r\n      });\r\n    }\r\n  }, [error, categories, resultData]);\r\n\r\n  // Массив паттернов\r\n  const patternResultsStrings = useMemo(() => {\r\n    if (Array.isArray(resultData?.patterns)) {\r\n      return resultData.patterns.map(\r\n        a => typeof a === \"string\" ? a : (a.pattern || \"\")\r\n      );\r\n    }\r\n    // fallback: если patterns нет, используем answers (старые результаты)\r\n    if (Array.isArray(resultData?.answers)) {\r\n      return resultData.answers.map(\r\n        a => typeof a === \"string\" ? a : (a.pattern || \"\")\r\n      );\r\n    }\r\n    return [];\r\n  }, [resultData]);\r\n\r\n  const resultsData = useMemo(() => {\r\n    if (!resultData || !categories.length) return null;\r\n    return createResultsData({\r\n      userData: resultData.user,\r\n      categories,\r\n      patternResults: patternResultsStrings\r\n    });\r\n  }, [resultData, categories, patternResultsStrings]);\r\n\r\n  const topPatterns = useMemo(() => resultsData ? getTopPatterns(resultsData) : [], [resultsData]);\r\n  const topCategory = useMemo(() => resultsData ? getTopCategory(resultsData) : null, [resultsData]);\r\n  const patternMessage = useMemo(() => resultsData ? getPatternMessage(resultsData) : \"\", [resultsData]);\r\n  const opportunities = useMemo(() => resultsData ? getOpportunities(resultsData) : \"\", [resultsData]);\r\n  const behaviorModel = useMemo(() => resultsData ? getBehaviorModel(resultsData) : \"\", [resultsData]);\r\n  const strengths = useMemo(() => resultsData ? getStrengths(resultsData) : \"\", [resultsData]);\r\n\r\n  if (loading || !categories.length || !resultsData) {\r\n    return <div>Загрузка...</div>;\r\n  }\r\n\r\n  return (\r\n    <ResultsScreen\r\n      resultsData={resultsData}\r\n      answers={resultData.answers}\r\n      patterns={patternResultsStrings}\r\n      categories={categories}\r\n      patternResults={resultsData.patternResults}\r\n      topPatterns={topPatterns}\r\n      topCategory={topCategory}\r\n      patternMessage={patternMessage}\r\n      opportunities={opportunities}\r\n      behaviorModel={behaviorModel}\r\n      strengths={strengths}\r\n    />\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}