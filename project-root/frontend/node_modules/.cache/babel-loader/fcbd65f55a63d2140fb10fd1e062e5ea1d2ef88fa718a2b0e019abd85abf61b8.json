{"ast":null,"code":"//src/components/Charts/PatternBarChart.jsx\nimport React from\"react\";import{getSubcategoryPatternStats}from\"../../utils/resultsHelpers\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PatternBarChart=_ref=>{let{categories,patternResults,strongThreshold=75}=_ref;const categoryWrappers=(categories||[]).map(cat=>{var _cat$title,_cat$title2,_cat$description,_cat$description2;const strongPatterns=[];(cat.subcategories||[]).forEach(subcat=>{const stats=getSubcategoryPatternStats(patternResults,subcat);(subcat.patterns||[]).forEach(pat=>{var _pat$pattern,_pat$pattern2;const nameRaw=((_pat$pattern=pat.pattern)===null||_pat$pattern===void 0?void 0:_pat$pattern.ru)||((_pat$pattern2=pat.pattern)===null||_pat$pattern2===void 0?void 0:_pat$pattern2.en)||'';const name=nameRaw.trim().toLowerCase();const percent=stats[name]||0;if(percent>=strongThreshold){strongPatterns.push({name:nameRaw,abbr:pat.pattern.abbreviation||\"\",percent,cssClass:cat.cssClass||\"\"});}});});return{category:((_cat$title=cat.title)===null||_cat$title===void 0?void 0:_cat$title.ru)||((_cat$title2=cat.title)===null||_cat$title2===void 0?void 0:_cat$title2.en),description:((_cat$description=cat.description)===null||_cat$description===void 0?void 0:_cat$description.ru)||((_cat$description2=cat.description)===null||_cat$description2===void 0?void 0:_cat$description2.en)||\"\",cssClass:cat.cssClass||\"\",strongPatterns};});const visibleCategoryWrappers=categoryWrappers.filter(cat=>cat.strongPatterns.length>0);const legendItems=[];visibleCategoryWrappers.forEach(cat=>{cat.strongPatterns.forEach(p=>{if(p.abbr&&!legendItems.find(l=>l.abbr===p.abbr)){legendItems.push({abbr:p.abbr,name:p.name});}});});return/*#__PURE__*/_jsx(\"div\",{className:\"histogram__container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"histogram__body\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"histogram__title\",children:\"\\u042F\\u0432\\u043D\\u043E \\u043F\\u0440\\u043E\\u044F\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043F\\u0430\\u0442\\u0442\\u0435\\u0440\\u043D\\u044B\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"histogram__content\",children:[visibleCategoryWrappers.map((cat,i)=>/*#__PURE__*/_jsxs(\"div\",{className:\"histogram__category-wrapper\"+(i===0?\" border\":\"\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"histogram__category-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"histogram__category\",children:cat.category}),/*#__PURE__*/_jsx(\"div\",{className:\"histogram__columns\",children:cat.strongPatterns.map(p=>/*#__PURE__*/_jsxs(\"div\",{className:\"histogram__column strong-pattern\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"histogram__pattern\",children:p.name}),/*#__PURE__*/_jsx(\"span\",{className:\"histogram__pattern-abr\",children:p.abbr}),/*#__PURE__*/_jsx(\"div\",{className:\"histogram__bar-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"histogram__bar \"+p.cssClass,style:{width:`${p.percent}%`}})}),/*#__PURE__*/_jsxs(\"span\",{className:\"histogram__percentage\"+(p.percent===100?\" maximum\":\"\"),children:[p.percent,\"%\"]})]},p.name))})]}),cat.description&&/*#__PURE__*/_jsx(\"div\",{className:\"histogram__category-description\",children:cat.description})]},cat.category)),/*#__PURE__*/_jsxs(\"div\",{className:\"legend\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u0423\\u0441\\u043B\\u043E\\u0432\\u043D\\u044B\\u0435 \\u043E\\u0431\\u043E\\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u044F:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"legend__grid\",children:legendItems.map(l=>/*#__PURE__*/_jsxs(\"div\",{className:\"legend__item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"abbreviation\",children:l.abbr}),\" \",/*#__PURE__*/_jsx(\"span\",{children:\"-\"}),\" \",l.name]},l.abbr))})]})]})]})});};export default PatternBarChart;","map":{"version":3,"names":["React","getSubcategoryPatternStats","jsx","_jsx","jsxs","_jsxs","PatternBarChart","_ref","categories","patternResults","strongThreshold","categoryWrappers","map","cat","_cat$title","_cat$title2","_cat$description","_cat$description2","strongPatterns","subcategories","forEach","subcat","stats","patterns","pat","_pat$pattern","_pat$pattern2","nameRaw","pattern","ru","en","name","trim","toLowerCase","percent","push","abbr","abbreviation","cssClass","category","title","description","visibleCategoryWrappers","filter","length","legendItems","p","find","l","className","children","i","style","width"],"sources":["F:/web/ЗАКАЗЫ/АЙФОРДЖИ/project-pattern-test/project-root/frontend/src/components/Charts/PatternBarChart.jsx"],"sourcesContent":["//src/components/Charts/PatternBarChart.jsx\r\nimport React from \"react\";\r\nimport { getSubcategoryPatternStats } from \"../../utils/resultsHelpers\";\r\n\r\nconst PatternBarChart = ({\r\n\tcategories,\r\n\tpatternResults,\r\n\tstrongThreshold = 75\r\n}) => {\r\n\tconst categoryWrappers = (categories || []).map((cat) => {\r\n\t\tconst strongPatterns = [];\r\n\t\t(cat.subcategories || []).forEach((subcat) => {\r\n\t\t\tconst stats = getSubcategoryPatternStats(patternResults, subcat);\r\n\t\t\t(subcat.patterns || []).forEach((pat) => {\r\n\t\t\t\tconst nameRaw = pat.pattern?.ru || pat.pattern?.en || '';\r\n\t\t\t\tconst name = nameRaw.trim().toLowerCase();\r\n\t\t\t\tconst percent = stats[name] || 0;\r\n\t\t\t\tif (percent >= strongThreshold) {\r\n\t\t\t\t\tstrongPatterns.push({\r\n\t\t\t\t\t\tname: nameRaw,\r\n\t\t\t\t\t\tabbr: pat.pattern.abbreviation || \"\",\r\n\t\t\t\t\t\tpercent,\r\n\t\t\t\t\t\tcssClass: cat.cssClass || \"\",\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tcategory: cat.title?.ru || cat.title?.en,\r\n\t\t\tdescription: cat.description?.ru || cat.description?.en || \"\",\r\n\t\t\tcssClass: cat.cssClass || \"\",\r\n\t\t\tstrongPatterns,\r\n\t\t};\r\n\t});\r\n\r\n\tconst visibleCategoryWrappers = categoryWrappers.filter(\r\n\t\t(cat) => cat.strongPatterns.length > 0\r\n\t);\r\n\r\n\tconst legendItems = [];\r\n\tvisibleCategoryWrappers.forEach((cat) => {\r\n\t\tcat.strongPatterns.forEach((p) => {\r\n\t\t\tif (p.abbr && !legendItems.find((l) => l.abbr === p.abbr)) {\r\n\t\t\t\tlegendItems.push({ abbr: p.abbr, name: p.name });\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"histogram__container\">\r\n\t\t\t<div className=\"histogram__body\">\r\n\t\t\t\t<h3 className=\"histogram__title\">Явно проявленные паттерны</h3>\r\n\t\t\t\t<div className=\"histogram__content\">\r\n\t\t\t\t\t{visibleCategoryWrappers.map((cat, i) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={cat.category}\r\n\t\t\t\t\t\t\tclassName={\"histogram__category-wrapper\" + (i === 0 ? \" border\" : \"\")}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"histogram__category-row\">\r\n\t\t\t\t\t\t\t\t<div className=\"histogram__category\">{cat.category}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"histogram__columns\">\r\n\t\t\t\t\t\t\t\t\t{cat.strongPatterns.map((p) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"histogram__column strong-pattern\" key={p.name}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"histogram__pattern\">{p.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"histogram__pattern-abr\">{p.abbr}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"histogram__bar-container\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"histogram__bar \" + p.cssClass}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: `${p.percent}%` }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"histogram__percentage\" + (p.percent === 100 ? \" maximum\" : \"\")}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{p.percent}%\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{cat.description && (\r\n\t\t\t\t\t\t\t\t<div className=\"histogram__category-description\">{cat.description}</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<div className=\"legend\">\r\n\t\t\t\t\t\t<h4>Условные обозначения:</h4>\r\n\t\t\t\t\t\t<div className=\"legend__grid\">\r\n\t\t\t\t\t\t\t{legendItems.map((l) => (\r\n\t\t\t\t\t\t\t\t<div className=\"legend__item\" key={l.abbr}>\r\n\t\t\t\t\t\t\t\t\t<span className=\"abbreviation\">{l.abbr}</span> <span>-</span> {l.name}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PatternBarChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}