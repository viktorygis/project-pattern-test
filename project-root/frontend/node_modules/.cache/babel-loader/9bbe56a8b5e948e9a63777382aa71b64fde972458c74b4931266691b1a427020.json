{"ast":null,"code":"import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\nexport { HTMLInputMaskElement as default };","map":{"version":3,"names":["HTMLMaskElement","IMask","HTMLInputMaskElement","constructor","input","_unsafeSelectionStart","selectionStart","value","length","_unsafeSelectionEnd","selectionEnd","_unsafeSelect","start","end","setSelectionRange","default"],"sources":["F:/web/ЗАКАЗЫ/АЙФОРДЖИ/project-pattern-test/project-root/frontend/node_modules/imask/esm/controls/html-input-mask-element.js"],"sourcesContent":["import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLInputMaskElement as default };\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,wBAAwB;AACpD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAO,mBAAmB;;AAE1B;AACA,MAAMC,oBAAoB,SAASF,eAAe,CAAC;EACjD;;EAEAG,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;;EAEA;EACA,IAAIC,qBAAqBA,CAAA,EAAG;IAC1B,OAAO,IAAI,CAACD,KAAK,CAACE,cAAc,IAAI,IAAI,GAAG,IAAI,CAACF,KAAK,CAACE,cAAc,GAAG,IAAI,CAACC,KAAK,CAACC,MAAM;EAC1F;;EAEA;EACA,IAAIC,mBAAmBA,CAAA,EAAG;IACxB,OAAO,IAAI,CAACL,KAAK,CAACM,YAAY;EAChC;;EAEA;EACAC,aAAaA,CAACC,KAAK,EAAEC,GAAG,EAAE;IACxB,IAAI,CAACT,KAAK,CAACU,iBAAiB,CAACF,KAAK,EAAEC,GAAG,CAAC;EAC1C;EACA,IAAIN,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACH,KAAK,CAACG,KAAK;EACzB;EACA,IAAIA,KAAKA,CAACA,KAAK,EAAE;IACf,IAAI,CAACH,KAAK,CAACG,KAAK,GAAGA,KAAK;EAC1B;AACF;AACAN,KAAK,CAACD,eAAe,GAAGA,eAAe;AAEvC,SAASE,oBAAoB,IAAIa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}