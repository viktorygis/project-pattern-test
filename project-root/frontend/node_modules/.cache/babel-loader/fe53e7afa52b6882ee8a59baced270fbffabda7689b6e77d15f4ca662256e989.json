{"ast":null,"code":"var _jsxFileName = \"F:\\\\web\\\\\\u0417\\u0410\\u041A\\u0410\\u0417\\u042B\\\\\\u0410\\u0419\\u0424\\u041E\\u0420\\u0414\\u0416\\u0418\\\\project-pattern-test\\\\project-root\\\\frontend\\\\src\\\\components\\\\Screens\\\\ResultsScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ResultsHeader from './../Sections/ResultsSections/ResultsHeader';\nimport HistogramSection from './../Sections/ResultsSections/HistogramSection';\nimport InterpretationSection from './../Sections/ResultsSections/InterpretationSection';\nimport LiteratureSection from './../Sections/ResultsSections/LiteratureSection';\nimport CategoryResultsSection from './../Sections/ResultsSections/CategoryResultsSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsScreen = ({\n  resultsData,\n  answers,\n  categories,\n  patternResults,\n  topPatterns,\n  topCategory,\n  patternMessage,\n  opportunities,\n  behaviorModel,\n  strengths\n}) => {\n  _s();\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [loading, setLoading] = useState(false); // если нужно\n\n  // Если хотите видеть структуру resultsData — лог выводим тут:\n  console.log(\"resultsData при рендере ResultsHeader:\", resultsData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(ResultsHeader, {\n      resultsData: resultsData,\n      loading: loading,\n      showSuccess: showSuccess,\n      setShowSuccess: setShowSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"result-main__subtitle\",\n        children: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0442\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(HistogramSection, {\n        categories: categories,\n        patternResults: patternResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InterpretationSection, {\n        topCategory: resultsData.topCategory,\n        patternMessage: patternMessage,\n        topPatterns: topPatterns,\n        opportunities: opportunities,\n        behaviorModel: behaviorModel,\n        strengths: strengths\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(LiteratureSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CategoryResultsSection, {\n      categories: categories,\n      patternResults: patternResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n_s(ResultsScreen, \"qAECLN9iSlQFwcTRnzG9mRnnb5U=\");\n_c = ResultsScreen;\nexport default ResultsScreen;\nvar _c;\n$RefreshReg$(_c, \"ResultsScreen\");","map":{"version":3,"names":["React","useState","ResultsHeader","HistogramSection","InterpretationSection","LiteratureSection","CategoryResultsSection","jsxDEV","_jsxDEV","ResultsScreen","resultsData","answers","categories","patternResults","topPatterns","topCategory","patternMessage","opportunities","behaviorModel","strengths","_s","showSuccess","setShowSuccess","loading","setLoading","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/web/ЗАКАЗЫ/АЙФОРДЖИ/project-pattern-test/project-root/frontend/src/components/Screens/ResultsScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ResultsHeader from './../Sections/ResultsSections/ResultsHeader';\r\nimport HistogramSection from './../Sections/ResultsSections/HistogramSection';\r\nimport InterpretationSection from './../Sections/ResultsSections/InterpretationSection';\r\nimport LiteratureSection from './../Sections/ResultsSections/LiteratureSection';\r\nimport CategoryResultsSection from './../Sections/ResultsSections/CategoryResultsSection';\r\n\r\nconst ResultsScreen = ({\r\n\tresultsData,\r\n\tanswers,\r\n\tcategories,\r\n\tpatternResults,\r\n\ttopPatterns,\r\n\ttopCategory,\r\n\tpatternMessage,\r\n\topportunities,\r\n\tbehaviorModel,\r\n\tstrengths\r\n}) => {\r\n\r\n\r\n\tconst [showSuccess, setShowSuccess] = useState(false);\r\n\tconst [loading, setLoading] = useState(false); // если нужно\r\n\r\n\t// Если хотите видеть структуру resultsData — лог выводим тут:\r\n\tconsole.log(\"resultsData при рендере ResultsHeader:\", resultsData);\r\n\r\n\treturn (\r\n\t\t<div className=\"result\">\r\n\t\t\t<ResultsHeader\r\n\t\t\t\tresultsData={resultsData}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\tshowSuccess={showSuccess}\r\n\t\t\t\tsetShowSuccess={setShowSuccess}\r\n\t\t\t/>\r\n\t\t\t<div className=\"result-main\">\r\n\t\t\t\t<h2 className=\"result-main__subtitle\">Результаты вашего тестирования</h2>\r\n\t\t\t\t<HistogramSection categories={categories} patternResults={patternResults} />\r\n\t\t\t\t<InterpretationSection\r\n\t\t\t\t\ttopCategory={resultsData.topCategory}\r\n\t\t\t\t\tpatternMessage={patternMessage}\r\n\t\t\t\t\ttopPatterns={topPatterns}\r\n\t\t\t\t\topportunities={opportunities}\r\n\t\t\t\t\tbehaviorModel={behaviorModel}\r\n\t\t\t\t\tstrengths={strengths}\r\n\t\t\t\t/>\r\n\t\t\t\t<LiteratureSection />\r\n\t\t\t</div>\r\n\t\t\t<CategoryResultsSection categories={categories} patternResults={patternResults} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ResultsScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,6CAA6C;AACvE,OAAOC,gBAAgB,MAAM,gDAAgD;AAC7E,OAAOC,qBAAqB,MAAM,qDAAqD;AACvF,OAAOC,iBAAiB,MAAM,iDAAiD;AAC/E,OAAOC,sBAAsB,MAAM,sDAAsD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1F,MAAMC,aAAa,GAAGA,CAAC;EACtBC,WAAW;EACXC,OAAO;EACPC,UAAU;EACVC,cAAc;EACdC,WAAW;EACXC,WAAW;EACXC,cAAc;EACdC,aAAa;EACbC,aAAa;EACbC;AACD,CAAC,KAAK;EAAAC,EAAA;EAGL,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C;EACAwB,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEhB,WAAW,CAAC;EAElE,oBACCF,OAAA;IAAKmB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACtBpB,OAAA,CAACN,aAAa;MACbQ,WAAW,EAAEA,WAAY;MACzBa,OAAO,EAAEA,OAAQ;MACjBF,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFxB,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC3BpB,OAAA;QAAImB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzExB,OAAA,CAACL,gBAAgB;QAACS,UAAU,EAAEA,UAAW;QAACC,cAAc,EAAEA;MAAe;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5ExB,OAAA,CAACJ,qBAAqB;QACrBW,WAAW,EAAEL,WAAW,CAACK,WAAY;QACrCC,cAAc,EAAEA,cAAe;QAC/BF,WAAW,EAAEA,WAAY;QACzBG,aAAa,EAAEA,aAAc;QAC7BC,aAAa,EAAEA,aAAc;QAC7BC,SAAS,EAAEA;MAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFxB,OAAA,CAACH,iBAAiB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACNxB,OAAA,CAACF,sBAAsB;MAACM,UAAU,EAAEA,UAAW;MAACC,cAAc,EAAEA;IAAe;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAER,CAAC;AAACZ,EAAA,CA5CIX,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}